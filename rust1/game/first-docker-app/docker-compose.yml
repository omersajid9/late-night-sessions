version: "3.9"
x-common-variables: &common-variables
  MYSQL_DATABASE: books
  MYSQL_USER: MYSQL_USER
  MYSQL_PASSWORD: MYSQL_PASSWORD


services:    
  mysql_db:
    image: mysql
    restart: always
    cap_add:
      - SYS_NICE
    volumes:
      - "./api_mysql/sql:/docker-entrypoint-initdb.d"
    ports:
      - "9906:3306"
    environment:
      <<: *common-variables
      MYSQL_ROOT_PASSWORD: MYSQL_ROOT_PASSWORD
      MYSQL_HOST: localhost


  postgres:
    image: "postgres:latest"
    environment:
      - POSTGRES_PASSWORD=postgres_password

  nginx:
    depends_on:
      - api_postgres
      - client
      - api_mysql
    restart: always
    image: omersajid9/first-docker-app:api_nginx
    # build:
    #   dockerfile: Dockerfile
    #   context: ./nginx
    ports:
      - "3050:80"

  api_postgres:
    # build:
    #   dockerfile: Dockerfile
    #   context: "./api_postgres"
    image: omersajid9/first-docker-app:api_postgres
    volumes:
      - /app/node_modules
      - ./api_postgres:/app
    environment:
      - PGUSER=postgres
      - PGHOST=postgres
      - PGDATABASE=postgres
      - PGPASSWORD=postgres_password
      - PGPORT=5432
  
  client:
    image: omersajid9/first-docker-app:client
    stdin_open: true
    environment:
      - CHOKIDAR_USEPOLLING=true
    # build:
    #   dockerfile: Dockerfile
    #   context: ./client
    volumes:
      - /app/node_modules
      - ./client:/app

  api_mysql:
    restart: always
    image: omersajid9/first-docker-app:api_mysql
    # build:
    #   dockerfile: Dockerfile
    #   context: "./api_mysql"
    depends_on:
      - mysql_db
    volumes:
      - /app/node_modules
      - ./api_mysql:/app
    environment:
      <<: *common-variables
      MYSQL_HOST_IP: mysql_db


